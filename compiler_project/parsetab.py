
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DIVIDE ELSE EQ GT ID IF LPAREN LT MINUS NUMBER PLUS RPAREN TIMES WHILEprogram : statement_liststatement_list : statement\n| statement_list statementstatement : ID ASSIGN expressionstatement : expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,],[4,4,-2,-12,-5,15,-11,-3,15,15,15,15,15,-12,-4,-6,-7,-8,-9,-10,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,],[6,6,-2,-12,-5,6,-11,-3,6,6,6,6,6,-12,-4,-6,-7,-8,-9,-10,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,],[7,7,-2,-12,-5,7,-11,-3,7,7,7,7,7,-12,-4,-6,-7,-8,-9,-10,]),'$end':([1,2,3,4,5,7,8,15,16,17,18,19,20,21,],[0,-1,-2,-12,-5,-11,-3,-12,-4,-6,-7,-8,-9,-10,]),'ASSIGN':([4,],[9,]),'PLUS':([4,5,7,14,15,16,17,18,19,20,21,],[-12,10,-11,10,-12,10,10,10,10,10,-10,]),'MINUS':([4,5,7,14,15,16,17,18,19,20,21,],[-12,11,-11,11,-12,11,11,11,11,11,-10,]),'TIMES':([4,5,7,14,15,16,17,18,19,20,21,],[-12,12,-11,12,-12,12,12,12,12,12,-10,]),'DIVIDE':([4,5,7,14,15,16,17,18,19,20,21,],[-12,13,-11,13,-12,13,13,13,13,13,-10,]),'RPAREN':([7,14,15,17,18,19,20,21,],[-11,21,-12,-6,-7,-8,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,2,],[3,8,]),'expression':([0,2,6,9,10,11,12,13,],[5,5,14,16,17,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',11),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',12),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','parser.py',16),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',22),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',26),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',27),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',28),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',29),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',41),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',45),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',49),
]
